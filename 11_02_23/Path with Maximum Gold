//Path with Maximum Gold

class Solution {
    public int dfs(int[][] grid,int i,int j){
        int r=grid.length;
        int c=grid[0].length;
        if(i<0 || j<0 || i>=r || j>=c || grid[i][j]==0){
            return 0;
        }
        int temp=grid[i][j];
        grid[i][j]=0;
        int up=dfs(grid,i-1,j);
        int down=dfs(grid,i+1,j);
        int left=dfs(grid,i,j-1);
        int right=dfs(grid,i,j+1);
        grid[i][j]=temp;
        return temp+Math.max(Math.max(Math.max(up,down),left),right);
    }
    public int getMaximumGold(int[][] grid) {
        int m=0;
        int r=grid.length;
        int c=grid[0].length;
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(grid[i][j]>0){
                    int sum=dfs(grid,i,j);
                    m=Math.max(sum,m);
                }
            }
        }
        return m;
    }
    
}
