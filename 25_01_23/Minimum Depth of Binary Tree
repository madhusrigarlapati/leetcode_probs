//Minimum Depth of Binary Tree

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 class Solution {
    public int minDepth(TreeNode r) {
        int dep=1;
        if(r==null){
            return 0;
        }
         if(r.left == null && r.right ==null)
                return 1;
        int l=minDepth(r.left);
        int ri=minDepth(r.right);
        if (l == 0){
            return 1 + ri; 
        } 
        if (ri == 0) {
            return 1 +l;
        }
        return 1+Math.min(l,ri) ;
    }
}
